# -*- coding: utf-8 -*-
"""chatbot project prototype.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PdU5mfx46zlyJmEVSdRlt7tZq_cX_VLT
"""

#description : This a chatbot prototype for software engineering lesson by Mehmet KarataÅŸ
# We try to create a chatbot to a website like this : https://www.shopline.com.tr/about

pip install nltk

pip install newspaper3k

#Import the libraries
from newspaper import Article
import random
import string
import nltk
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
import warnings
warnings.filterwarnings('ignore')

#Download the punkt package
nltk.download('punkt', quiet=True)

#Get the articles
article = Article('https://www.shopline.com.tr/about')
article.download()
article.parse()
article.nlp()
corpus=article.text

article_wall = Article('https://www.shopline.com.tr/wall-systems')
article_wall.download()
article_wall.parse()
article_wall.nlp()
corpus_wall =article_wall.text

article_mesh = Article('https://www.shopline.com.tr/mesh-system')
article_mesh.download()
article_mesh.parse()
article_mesh.nlp()
corpus_mesh=article_mesh.text

article_design = Article('https://www.shopline.com.tr/store-design')
article_design.download()
article_design.parse()
article_design.nlp()
corpus_design=article_design.text
"""
article_home = Article('https://www.shopline.com.tr/')
article_home.download()
article_home.parse()
article_home.nlp()
corpus_home = article_home.text
"""

#print the articles texts
print(corpus_design)

#Tokenization
text = corpus_mesh + corpus_wall + corpus_design + corpus
sentence_list = nltk.sent_tokenize(text)  # A list of sentences

#print the list of sentences
print(sentence_list)

# A function to return a random greeting response to a users greeting
def greeting_response(text):
  text = text.lower()

  #Bots greeting response
  bot_greetings =['hello', 'hi', 'hey', 'howdy' , 'hola']
  #Users greeting response
  user_greetings = ['hi' , 'hey' , 'hello' , 'hola' , 'greetings' , 'whats up' ]

  for word in text.split():
    if word in user_greetings:
      return random.choice(bot_greetings)

def index_sort(list_var):
  length = len(list_var)
  list_index = list(range(0, length))

  x = list_var
  for i in range(length) :
    for j in range(length):
      if x[list_index[i]] > x[list_index[j]]:
           #swap
           temp = list_index[i]
           list_index[i] = list_index[j]
           list_index[j] = temp
  return list_index

#Create the bot response
def bot_response(user_input):
  user_input = user_input.lower()
  sentence_list.append(user_input) # I can add product names with append() method
  bot_response = ' '
  cm = CountVectorizer().fit_transform(sentence_list)
  similarity_scores = cosine_similarity(cm[-1], cm)
  similarity_scores_list = similarity_scores.flatten()
  index = index_sort( similarity_scores_list)
  index = index[1:]
  response_flag = 0

  j = 0
  for i in range(len(index)):
    if similarity_scores_list[index[i]] > 0.0 :
      bot_response = bot_response + ' '+sentence_list[index[i]]
      response_flag = 1
      j = j+1
    if j > 2 :
      break
  if response_flag ==0 :
    bot_response = bot_response+ ' '+"I apologize, I don't understant."         

  sentence_list.remove(user_input)

  return bot_response

#Start the chat
print("Mehmets Bot : I am Mehmet Shopping Bot. \nI will asnwer your quesitons about our products and shop. If you want to exit, type 'bye' ")

exit_list = ['exit', 'see you later' , 'bye' , 'quit' , 'break']
while(True):
  user_input = input()
  if user_input.lower() in exit_list:
    print('Mehmets Bot: Chat with you later')
    break
  else:
    if greeting_response(user_input) !=None:
      print('Mehmets Bot: ' + greeting_response(user_input))  
    else:
      print('Mehmets Bot: '+ bot_response(user_input))
